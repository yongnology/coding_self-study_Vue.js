01

사용명령어
npm create vue@latest .

=============================================

Vue.js - The Progressive JavaScript Framework

√ Package name: ... 01
√ Add TypeScript? ... No / Yes
√ Add JSX Support? ... No / Yes
√ Add Vue Router for Single Page Application development? ... No / Yes
√ Add Pinia for state management? ... No / Yes
√ Add Vitest for Unit Testing? ... No / Yes
√ Add an End-to-End Testing Solution? » No
√ Add ESLint for code quality? » No

=============================================

3장
3.1 뷰 애플리케이션의 기본 구조

■ package.json
- name : 뷰 애플리케이션의 이름
- version 0.0.0 에서 순서대로 [mayjor].[minor].[patch]
- private : 뷰 애플리케션의 공개 여부의미 논리형 값. true 면 비공개, 외부에 공개되지 않음.
    공익목적의 프로젝트가 아니라면 대부분 true
- scripts : 뷰 애플리케이션을 빌드하거나 실행할 수 있는 명령어를 등록하는 부분
- dependencies : 의존성 모듈을 정의하는 부분

■ main.js
index.html 파일에서 main.js 파일을 불러오면 뷰 애플리케이션의 코드가 실행
: 뷰 애플리케이션을 초기화하고 구성하는 역할을 하는 파일

■ App.vue
SFC(Single File Component), 다른 말로는 컴포넌트 라고 한다.
뷰 애플리케이션에서 루트 컴포넌트의 역할을 한다.
루트 컴포넌트란 컴포넌트 중에서 뷰 애플리케이션이 최로로 진입하는, 가장 상위에 있는 컴포넌트.
뷰는 컴포넌트를 기준으로 트리 구조처럼 하위 컴포넌트가 뻗어나가는 형태로 구현된다.

SFC 는 <script>, <template>, <style> 태그로 영역을 구분한다.

3.2 뷰 애플리케이션 인스턴스

자바스크립트에서 인스턴스(instance)는 클레스의 실체화된 객체를 의미.
클래스(class)가 객체를 생성하기 위한 템플릿이라면, 인스턴스는 해당 클래스의 실제 객체.

뷰에서 인스턴스를 생성하는 코드는 main.js 파일에 작성

3.2.3 SFC의 구조
SFC는 일반적으로 <script>, <template>, <style> 3가지 태그 영역으로 구성
주의점. SFC 파일에 <template>태그를 1개 이상 포함해야 한다.